Generate a pure backend REST API using **only** the following technologies:  
- Node.js (JavaScript, no TypeScript)  
- Express.js  
- PostgreSQL (with `pg` client)  
- Helmet.js (for HTTP security headers)  
- bcrypt (for password hashing)  
- jsonwebtoken (JWT, internal authentication only)  
- dotenv (environment variable management)  
- nodemailer (for sending emails via TLS)  

**Do not add or use any other libraries, frameworks, or technologies.**

---

The codebase should be structured following a **clear layered architecture** with at least these layers and folders:  
- **Models:** Database schema and query logic  
- **Controllers:** Request handlers and business logic orchestration  
- **Routes:** API route definitions connecting HTTP endpoints to controllers  
- **Middleware:** Authentication, validation, security, error handling  
- **Services (optional):** For complex business logic if needed  
- **Config:** Environment and setup configurations  

---

The API must implement the following functional and non-functional requirements (as detailed in the previous prompt)...

*(then continue with the full detailed requirements you already have)*

---

Additional constraints:  
- Use plain JavaScript (ES6+), no TypeScript or transpilation.  
- Do not include frontend code or any UI-related code.  
- No external authentication services (OAuth, Firebase, Auth0, etc.).  
- All authentication logic must be implemented internally using JWT and bcrypt.  
- Ensure separation of concerns and modularity for maintainability.  
- Include clear, concise comments and documentation for all modules.  

---

Please generate the full backend source code including:  
- Folder and file structure  
- package.json dependencies (only the allowed libs)  
- Database schema creation scripts (SQL)  
- Express app setup with middleware  
- Routes and controllers for all specified endpoints  
- Authentication and authorization middleware  
- Email sending functionality  
- Sample configuration (.env.example)  

---

